name: "message-db-cicd"

on:
  push:
    branches: ["main"]
    paths:
      - "message-db/**"

  pull_request:
    branches: ["main"]
    paths:
      - "message-db/**"

jobs:
  hlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: "Set up HLint"
        uses: haskell/actions/hlint-setup@v2
        with:
          version: "3.4"

      - name: "Run HLint"
        uses: haskell/actions/hlint-run@v2
        with:
          path: '["message-db/src/", "message-db/test/"]'
          fail-on: warning

  fourmolu:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: fourmolu/fourmolu-action@v2
        with:
          pattern: |
            message-db/src/**/*.hs
            message-db/test/**/*.hs

  cabal:
    name: cabal ${{ matrix.cabal }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        cabal: ["3.6"]
        ghc:
          - "8.10"
          - "9.0"
          - "9.2"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: "Setup system dependencies"
        uses: "./.github/actions/setup-system-dependencies"

      - uses: "./.github/actions/cabal-build"
        name: Build
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
          package: message-db

  stack:
    name: stack ${{ matrix.stack }} / ${{ matrix.resolver }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: ["ubuntu-latest"]
        stack: ["2.7.5"]
        resolver:
          - "lts-18"
          - "lts-19"
          - "nightly"
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: "Setup system dependencies"
        uses: "./.github/actions/setup-system-dependencies"

      - uses: "./.github/actions/stack-build"
        name: Build
        with:
          resolver: ${{ matrix.resolver }}
          stack-version: ${{ matrix.stack }}
          package: message-db

  #publish:
    #name: "publish"
    #runs-on: "ubuntu-latest"
    #needs:
      #- hlint
      #- cabal
      #- stack
    #steps:
      #- uses: actions/checkout@v2
        #with:
          #submodules: true

      #- name: "Setup system dependencies"
        #uses: "./.github/actions/setup-system-dependencies"

      #- uses: haskell/actions/setup@v1
        #id: setup-haskell-cabal
        #name: Setup Haskell and Cabal
        #with:
          #ghc-version: "8.10.7"
          #cabal-version: "3.6"

      #- name: Freeze
        #run: |
          #cabal freeze
          #head -n -1 cabal.project.freeze > deps

      #- uses: actions/cache@v2.1.3
        #name: Cache ~/.cabal/store
        #with:
          #path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          #key: publish-${{ hashFiles('deps') }}

      #- name: "Bundle the package"
        #run: |
          #cabal sdist

      #- name: "Bundle the documentation"
        #run: |
          #cabal haddock --haddock-for-hackage --enable-doc

      #- name: "Publish package to Hackage"
        #if: github.event_name == 'release'
        #env:
          #HACKAGE_USER: ${{ secrets.HACKAGE_USER }}
          #HACKAGE_PASSWORD: ${{ secrets.HACKAGE_PASSWORD }}
        #run: |
          #cabal upload --publish -u $HACKAGE_USER -p $HACKAGE_PASSWORD ./dist-newstyle/sdist/*.tar.gz

      #- name: "Publish candidate package to Hackage"
        #if: github.event_name == 'push'
        #env:
          #HACKAGE_USER: ${{ secrets.HACKAGE_USER }}
          #HACKAGE_PASSWORD: ${{ secrets.HACKAGE_PASSWORD }}
        #run: |
          #cabal upload -u $HACKAGE_USER -p $HACKAGE_PASSWORD ./dist-newstyle/sdist/*.tar.gz

      #- name: "Publish docs to Hackage"
        #if: github.event_name == 'release'
        #env:
          #HACKAGE_USER: ${{ secrets.HACKAGE_USER }}
          #HACKAGE_PASSWORD: ${{ secrets.HACKAGE_PASSWORD }}
        #run: |
          #cabal upload --publish -u $HACKAGE_USER -p $HACKAGE_PASSWORD -d ./dist-newstyle/*-docs.tar.gz

      #- name: "Publish candidate docs to Hackage"
        #if: github.event_name == 'push'
        #env:
          #HACKAGE_USER: ${{ secrets.HACKAGE_USER }}
          #HACKAGE_PASSWORD: ${{ secrets.HACKAGE_PASSWORD }}
        #run: |
          #cabal upload -u $HACKAGE_USER -p $HACKAGE_PASSWORD -d ./dist-newstyle/*-docs.tar.gz
